{"map":"{\"version\":3,\"sources\":[\"/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/src/App.js\",\"/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/src/serviceWorker.js\",\"/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/src/index.js\",\"/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/src/logo.svg\"],\"names\":[\"App\",\"state\",\"_this2\",\"this\",\"fetch\",\"headers\",\"Accept\",\"Content-Type\",\"then\",\"response\",\"json\",\"data\",\"setState\",\"react_default\",\"a\",\"createElement\",\"className\",\"class\",\"src\",\"logo\",\"alt\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"2RAkFeA,oNAzEXC,MAAQ,sFAEY,IAAAC,EAAAC,KAChBC,MAAM,QACE,CACIC,QAAS,CACLC,OAAU,mBACVC,eAAgB,sBAGvBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFT,EAAKU,SAASD,sCAK1B,OACQE,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,6BACPJ,EAAAC,EAAAC,cAAA,MAAA,CAAKG,IAAKC,EAAAA,EAAMH,UAAU,WAAWI,IAAI,SACzCP,EAAAC,EAAAC,cAAA,IAAA,KACIF,EAAAC,EAAAC,cAAA,SAAA,KAAA,sDAGRF,EAAAC,EAAAC,cAAA,KAAA,MAAKF,EAAAC,EAAAC,cAAA,KAAA,MAILF,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,mBACPJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,OACPJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,aACPJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,aACPJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,gBAAX,kBAGAJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,4BACPJ,EAAAC,EAAAC,cAAA,IAAA,KACIF,EAAAC,EAAAC,cAAA,SAAA,KAAQF,EAAAC,EAAAC,cAAA,SAAA,KAAA,sBAKpBF,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,aACPJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,gBAAX,mBAGAJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,4BACPJ,EAAAC,EAAAC,cAAA,IAAA,KACIF,EAAAC,EAAAC,cAAA,SAAA,KAAQF,EAAAC,EAAAC,cAAA,SAAA,KAAA,uBAKpBF,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,aACPJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,gBAAX,kBAGAJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,4BACPJ,EAAAC,EAAAC,cAAA,IAAA,KACIF,EAAAC,EAAAC,cAAA,SAAA,KAAQF,EAAAC,EAAAC,cAAA,SAAA,KAAA,iCA9DlCM,EAAAA,YCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOf,EAAAC,EAAAC,cAACc,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB\",\"sourcesContent\":[\"import \\\"../node_modules/bootstrap/dist/css/bootstrap.min.css\\\";\\nimport \\\"../node_modules/bootstrap/dist/js/bootstrap.bundle.min\\\";\\n\\nimport React, {Component} from \\\"react\\\";\\nimport logo from \\\"./logo.svg\\\";\\nimport \\\"./App.css\\\";\\n\\nclass App extends Component {\\n\\n    state = {};\\n\\n    componentDidMount() {\\n        fetch('/test',\\n                {\\n                    headers: {\\n                        'Accept': 'application/json',\\n                        'Content-Type': 'application/json'\\n                    }\\n                })\\n                .then(response => response.json())\\n                .then(data => {\\n                    this.setState(data);\\n                });\\n    }\\n\\n    render() {\\n        return (\\n                <div className=\\\"App\\\">\\n                    <div class=\\\"jumbotron jumbotron-fluid\\\">\\n                        <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\"/>\\n                        <p>\\n                            <strong>Welcome to your jBPM React Business Application!</strong>\\n                        </p>\\n                    </div>\\n                    <br/><br/>\\n\\n\\n\\n                    <div class=\\\"container-fluid\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"card-deck\\\">\\n                                <div class=\\\"card mb-3\\\">\\n                                    <div class=\\\"view overlay\\\">\\n                                        First One.....\\n                                    </div>\\n                                    <div class=\\\"card-body jbpm-card-body\\\">\\n                                        <p>\\n                                            <center><strong>First One Body</strong></center>\\n                                        </p>\\n\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"card mb-3\\\">\\n                                    <div class=\\\"view overlay\\\">\\n                                        Second One.....\\n                                    </div>\\n                                    <div class=\\\"card-body jbpm-card-body\\\">\\n                                        <p>\\n                                            <center><strong>Second One Body</strong></center>\\n                                        </p>\\n\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"card mb-3\\\">\\n                                    <div class=\\\"view overlay\\\">\\n                                        Third One.....\\n                                    </div>\\n                                    <div class=\\\"card-body jbpm-card-body\\\">\\n                                        <p>\\n                                            <center><strong>Third One Body</strong></center>\\n                                        </p>\\n\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n        );\\n    }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(23)},15:function(e,t,n){},21:function(e,t,n){},23:function(e,t,n){\"use strict\";n.r(t);var a=n(0),c=n.n(a),l=n(3),r=n.n(l),o=(n(15),n(4)),s=n(5),i=n(8),d=n(6),m=n(9),u=(n(17),n(19),n(7)),p=n.n(u),v=(n(21),function(e){function t(){var e,n;Object(o.a)(this,t);for(var a=arguments.length,c=new Array(a),l=0;l<a;l++)c[l]=arguments[l];return(n=Object(i.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(c)))).state={},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"/test\",{headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"}}).then(function(e){return e.json()}).then(function(t){e.setState(t)})}},{key:\"render\",value:function(){return c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(\"div\",{class:\"jumbotron jumbotron-fluid\"},c.a.createElement(\"img\",{src:p.a,className:\"App-logo\",alt:\"logo\"}),c.a.createElement(\"p\",null,c.a.createElement(\"strong\",null,\"Welcome to your jBPM React Business Application!\"))),c.a.createElement(\"br\",null),c.a.createElement(\"br\",null),c.a.createElement(\"div\",{class:\"container-fluid\"},c.a.createElement(\"div\",{class:\"row\"},c.a.createElement(\"div\",{class:\"card-deck\"},c.a.createElement(\"div\",{class:\"card mb-3\"},c.a.createElement(\"div\",{class:\"view overlay\"},\"First One.....\"),c.a.createElement(\"div\",{class:\"card-body jbpm-card-body\"},c.a.createElement(\"p\",null,c.a.createElement(\"center\",null,c.a.createElement(\"strong\",null,\"First One Body\"))))),c.a.createElement(\"div\",{class:\"card mb-3\"},c.a.createElement(\"div\",{class:\"view overlay\"},\"Second One.....\"),c.a.createElement(\"div\",{class:\"card-body jbpm-card-body\"},c.a.createElement(\"p\",null,c.a.createElement(\"center\",null,c.a.createElement(\"strong\",null,\"Second One Body\"))))),c.a.createElement(\"div\",{class:\"card mb-3\"},c.a.createElement(\"div\",{class:\"view overlay\"},\"Third One.....\"),c.a.createElement(\"div\",{class:\"card-body jbpm-card-body\"},c.a.createElement(\"p\",null,c.a.createElement(\"center\",null,c.a.createElement(\"strong\",null,\"Third One Body\")))))))))}}]),t}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(c.a.createElement(v,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},7:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"}},[[10,2,1]]]);","extractedComments":[]}