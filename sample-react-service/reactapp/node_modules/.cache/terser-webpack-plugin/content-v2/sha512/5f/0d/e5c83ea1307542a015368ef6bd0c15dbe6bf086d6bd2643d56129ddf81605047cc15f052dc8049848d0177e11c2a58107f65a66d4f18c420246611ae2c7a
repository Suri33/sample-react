{"map":"{\"version\":3,\"sources\":[\"/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/src/logo.svg\",\"/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/src/App.js\",\"/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/src/ContainerInfo.js\",\"/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/src/ServerInfo.js\",\"/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/src/ProcessDefsInfo.js\",\"/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/src/serviceWorker.js\",\"/Users/tsurdilovic/devel/business-applications/sample-react/sample-react-service/reactapp/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"App\",\"Component\",\"serverInfo\",\"getServerData\",\"fetch\",\"headers\",\"Accept\",\"Content-Type\",\"then\",\"response\",\"json\",\"data\",\"setInterval\",\"this\",\"react_default\",\"a\",\"createElement\",\"className\",\"class\",\"src\",\"logo\",\"alt\",\"undefined\",\"info\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gPC2DzBC,QCxDaC,EAAAA,UCAHA,EAAAA,UCAKA,EAAAA,qNHU1BC,WAAa,KAMbC,cAAgB,WACZC,MAAM,eACE,CACIC,QAAS,CACLC,OAAU,mBACVC,eAAgB,sBAGvBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFT,WAAaS,wFAbzBC,YAAYC,KAAKV,cAAe,sCAmBhC,OACQW,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,4BAA4BD,UAAU,mBAC7CH,EAAAC,EAAAC,cAAA,MAAA,CAAKG,IAAKC,EAAAA,EAAMH,UAAU,WAAWI,IAAI,SACzCP,EAAAC,EAAAC,cAAA,IAAA,KACIF,EAAAC,EAAAC,cAAA,SAAA,KAAQF,EAAAC,EAAAC,cAAA,KAAA,KAAA,sDAEZF,EAAAC,EAAAC,cAAA,KAAA,OAGJF,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,mBACPJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,8BACPJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAM,aACPJ,EAAAC,EAAAC,mBAACM,EAAD,CAAYC,KAAMV,KAAKX,aACvBY,EAAAC,EAAAC,mBAACM,EAAD,MACAR,EAAAC,EAAAC,mBAACM,EAAD,iBAvCdrB,EAAAA,YICEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOhB,EAAAC,EAAAC,cAACe,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,KAAK,SAAA6B,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import \\\"../node_modules/bootstrap/dist/css/bootstrap.min.css\\\";\\nimport \\\"../node_modules/bootstrap/dist/js/bootstrap.bundle.min\\\";\\n\\nimport React, {Component} from \\\"react\\\";\\nimport logo from \\\"./logo.svg\\\";\\nimport \\\"./App.css\\\";\\n\\nimport ContainerInfo from \\\"./ContainerInfo\\\";\\nimport ServerInfo from \\\"./ServerInfo\\\";\\nimport ProcessDefsInfo from \\\"./ProcessDefsInfo\\\";\\n\\nclass App extends Component {\\n\\n    serverInfo = {};\\n\\n    componentDidMount() {\\n        setInterval(this.getServerData, 150);\\n    }\\n\\n    getServerData = () => {\\n        fetch('/rest/server',\\n                {\\n                    headers: {\\n                        'Accept': 'application/json',\\n                        'Content-Type': 'application/json'\\n                    }\\n                })\\n                .then(response => response.json())\\n                .then(data => {\\n                    serverInfo = data;\\n                });\\n    };\\n\\n\\n    render() {\\n        return (\\n                <div className=\\\"App\\\">\\n                    <div class=\\\"jumbotron jumbotron-fluid\\\" className=\\\"ReactTitleStyle\\\">\\n                        <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\"/>\\n                        <p>\\n                            <strong><h3>Welcome to your jBPM React Business Application!</h3></strong>\\n                        </p>\\n                        <br/>\\n                    </div>\\n\\n                    <div class=\\\"container-fluid\\\">\\n                        <div class=\\\"row justify-content-center\\\">\\n                            <div class=\\\"card-deck\\\">\\n                                <ServerInfo info={this.serverInfo}/>\\n                                <ContainerInfo/>\\n                                <ProcessDefsInfo/>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n        );\\n    }\\n}\\n\\nexport default App;\\n\",\"import React, {Component} from \\\"react\\\";\\nimport \\\"./App.css\\\";\\n\\nclass ContainerInfo extends Component {\\n    state = {};\\n\\n    // componentWillMount() {\\n    //     fetch('/rest/server/containers',\\n    //             {\\n    //                 headers: {\\n    //                     'Accept': 'application/json',\\n    //                     'Content-Type': 'application/json'\\n    //                 }\\n    //             })\\n    //             .then(response => response.json())\\n    //             .then(data => {\\n    //                 this.setState(data);\\n    //             });\\n    // }\\n\\n    render() {\\n        return (\\n                <div class=\\\"card mb-4\\\">\\n                    <div class=\\\"view overlay\\\" className=\\\"ReactTitleStyle\\\">\\n                        <center><strong>Container Info</strong></center>\\n                    </div>\\n                    <div class=\\\"card-body jbpm-card-body\\\">\\n\\n\\n                        <dl class=\\\"row\\\">\\n                            <dt class=\\\"col-sm-3\\\">Description lists</dt>\\n                            <dd class=\\\"col-sm-9\\\">A description list is perfect for defining terms.</dd>\\n\\n                            <dt class=\\\"col-sm-3\\\">Euismod</dt>\\n                            <dd class=\\\"col-sm-9\\\">\\n                                <p>Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</p>\\n                                <p>Donec id elit non mi porta gravida at eget metus.</p>\\n                            </dd>\\n\\n                            <dt class=\\\"col-sm-3\\\">Malesuada porta</dt>\\n                            <dd class=\\\"col-sm-9\\\">Etiam porta sem malesuada magna mollis euismod.</dd>\\n\\n                            <dt class=\\\"col-sm-3 text-truncate\\\">Truncated term is truncated</dt>\\n                            <dd class=\\\"col-sm-9\\\">Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</dd>\\n\\n                            <dt class=\\\"col-sm-3\\\">Nesting</dt>\\n                            <dd class=\\\"col-sm-9\\\">\\n                                <dl class=\\\"row\\\">\\n                                    <dt class=\\\"col-sm-4\\\">Nested definition list</dt>\\n                                    <dd class=\\\"col-sm-8\\\">Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc.</dd>\\n                                </dl>\\n                            </dd>\\n                        </dl>\\n\\n\\n                    </div>\\n                </div>\\n        );\\n    }\\n}\\n\\n//export default ContainerInfo;\",\"import React, {Component} from \\\"react\\\";\\nimport \\\"./App.css\\\";\\n\\nclass ServerInfo extends Component {\\n    render() {\\n        return (\\n                <div class=\\\"card mb-4\\\">\\n                    <div class=\\\"view overlay\\\" className=\\\"ReactTitleStyle\\\">\\n                        <center><strong>Server Info</strong></center>\\n                    </div>\\n                    <div class=\\\"card-body jbpm-card-body\\\">\\n                        {this.props.info && this.props.info.result && this.props.info !== undefined && this.props.info.result[\\\"result.kie-server-info\\\"].map(item =>\\n                        <dl class=\\\"row\\\">\\n                            <dt class=\\\"col-sm-3\\\">Name</dt>\\n                            <dd class=\\\"col-sm-9\\\">{item.name}</dd>\\n\\n                            <dt class=\\\"col-sm-3\\\">Id</dt>\\n                            <dd class=\\\"col-sm-9\\\">{item.id}</dd>\\n\\n                            <dt class=\\\"col-sm-3\\\">Version</dt>\\n                            <dd class=\\\"col-sm-9\\\">{item.version}</dd>\\n\\n                            <dt class=\\\"col-sm-3\\\">Location</dt>\\n                            <dd class=\\\"col-sm-9\\\">{item.location}</dd>\\n\\n                            <dt class=\\\"col-sm-3 text-truncate\\\">Capabilities</dt>\\n                            <dd class=\\\"col-sm-9\\\">\\n                                <ul>\\n                                    {item.capabilities.map(capability => (\\n                                            <li>{capability}</li>\\n                                    ))\\n                                    }\\n                                </ul>\\n                            </dd>\\n                        </dl>\\n                        )}\\n                    </div>\\n                </div>\\n        );\\n    }\\n}\\n\\n//export default ServerInfo;\",\"import React, {Component} from \\\"react\\\";\\nimport \\\"./App.css\\\";\\n\\nclass ProcessDefsInfo extends Component {\\n    state = {};\\n\\n    // componentWillMount() {\\n    //     fetch('/rest/server/containers/sample-react-kjar/processes',\\n    //             {\\n    //                 headers: {\\n    //                     'Accept': 'application/json',\\n    //                     'Content-Type': 'application/json'\\n    //                 }\\n    //             })\\n    //             .then(response => response.json())\\n    //             .then(data => {\\n    //                 this.setState(data);\\n    //             });\\n    // }\\n\\n    render() {\\n        return (\\n                <div class=\\\"card mb-4\\\">\\n                    <div class=\\\"view overlay\\\" className=\\\"ReactTitleStyle\\\">\\n                        <center><strong>Process Definitions</strong></center>\\n                    </div>\\n                    <div class=\\\"card-body jbpm-card-body\\\">\\n\\n\\n                        <dl class=\\\"row\\\">\\n                            <dt class=\\\"col-sm-3\\\">Description lists</dt>\\n                            <dd class=\\\"col-sm-9\\\">A description list is perfect for defining terms.</dd>\\n\\n                            <dt class=\\\"col-sm-3\\\">Euismod</dt>\\n                            <dd class=\\\"col-sm-9\\\">\\n                                <p>Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</p>\\n                                <p>Donec id elit non mi porta gravida at eget metus.</p>\\n                            </dd>\\n\\n                            <dt class=\\\"col-sm-3\\\">Malesuada porta</dt>\\n                            <dd class=\\\"col-sm-9\\\">Etiam porta sem malesuada magna mollis euismod.</dd>\\n\\n                            <dt class=\\\"col-sm-3 text-truncate\\\">Truncated term is truncated</dt>\\n                            <dd class=\\\"col-sm-9\\\">Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</dd>\\n\\n                            <dt class=\\\"col-sm-3\\\">Nesting</dt>\\n                            <dd class=\\\"col-sm-9\\\">\\n                                <dl class=\\\"row\\\">\\n                                    <dt class=\\\"col-sm-4\\\">Nested definition list</dt>\\n                                    <dd class=\\\"col-sm-8\\\">Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc.</dd>\\n                                </dl>\\n                            </dd>\\n                        </dl>\\n\\n\\n                    </div>\\n                </div>\\n        );\\n    }\\n}\\n\\n//export default ProcessDefsInfo;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,n,t){e.exports=t.p+\"static/media/logo.5d5d9eef.svg\"},11:function(e,n,t){e.exports=t(23)},16:function(e,n,t){},23:function(e,n,t){\"use strict\";t.r(n);var a=t(0),o=t.n(a),r=t(9),c=t.n(r),l=(t(16),t(1)),i=t(2),s=t(4),u=t(3),m=t(5),p=(t(18),t(20),t(10)),d=t.n(p),v=(t(6),a.Component,a.Component,a.Component,function(e){function n(){var e,t;Object(l.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(s.a)(this,(e=Object(u.a)(n)).call.apply(e,[this].concat(o)))).serverInfo={},t.getServerData=function(){fetch(\"/rest/server\",{headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"}}).then(function(e){return e.json()}).then(function(e){serverInfo=e})},t}return Object(m.a)(n,e),Object(i.a)(n,[{key:\"componentDidMount\",value:function(){setInterval(this.getServerData,150)}},{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(\"div\",{class:\"jumbotron jumbotron-fluid\",className:\"ReactTitleStyle\"},o.a.createElement(\"img\",{src:d.a,className:\"App-logo\",alt:\"logo\"}),o.a.createElement(\"p\",null,o.a.createElement(\"strong\",null,o.a.createElement(\"h3\",null,\"Welcome to your jBPM React Business Application!\"))),o.a.createElement(\"br\",null)),o.a.createElement(\"div\",{class:\"container-fluid\"},o.a.createElement(\"div\",{class:\"row justify-content-center\"},o.a.createElement(\"div\",{class:\"card-deck\"},o.a.createElement(void 0,{info:this.serverInfo}),o.a.createElement(void 0,null),o.a.createElement(void 0,null)))))}}]),n}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(o.a.createElement(v,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},6:function(e,n,t){}},[[11,2,1]]]);","extractedComments":[]}